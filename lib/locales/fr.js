
i18n.map('fr', {
  layout: {
    // title
    // logo
    // explanation
    homeTitle: 'Accueil',
    programmingLanguagesTitle: 'Langages de programmation',
    // mongoDBAdminTitle
    toggleNavigationButton: 'basculer la navigation',
    unexpectedErrorMessage: 'Une erreur inattendue est survenue.\n{$1}',
  },
  account: {
    title: 'Mon compte',
    loginTitle: 'Connexion',
    solvedExercisesSubtitle: 'Mes exercices résolus',
    createdExercisesSubtitle: 'Mes propres exercices',
    createdExaminationsSubtitle: 'Mes propres examens',
    createdExecutionSubtitle: 'Mes propres exécutions',
    archiveSubtitle: 'Mon archive',
    accountSettingsSubtitle: 'Paramètres du compte',
    adminSettingsSubtitle: 'Paramètres administrateur',
    emailLabel: 'Adresse email',
    nameLabel: 'Nom',
    makeAdminLabel: 'Utilisateur à autoriser',
    archiveButton: 'archiver',
    unarchiveButton: "annuler l'archivage",
    loginButton: 'connexion',
    registerButton: 'inscription',
    logoutButton: 'déconnexion',
    logoutOtherClientsButton: 'déconnecter mes autres sessions',
    makeAdminButton: 'rendre administrateur',
    isAdminMessage: 'Vous avez autorisé un administrateur',
    verificationSuccessMessage: "L'adresse email a été vérifiée avec succès.\nVous êtes maintenant connecté.",
    verificationErrorMessage: "La vérification de l'adresse email a échoué.\nVeuillez réessayer.",
    // passwordResetSuccessMessage
    passwordMismatchMessage: 'Les mots de passe ne correspondent pas.',
    passwordResetErrorMessage: 'La réinitialisation du mot de passe a échoué.\nVeuillez réessayer pour obtenir un nouveau lien.',
  },
  category: {
    createTitle: 'Créer une catégorie',
    editTitle: "Éditer la catégorie '{$1}'",
    editBreadcrumb: 'Édition de catégorie',
    createButton: 'créer une catégorie',
    editButton: 'éditer une catégorie',
    isNotValidMessage: "Cette catégorie n'est pas valide et ne peut être enregistrée.\nVeuillez remplire tous les champs obligatoires (langage, nom(s), description(s)).",
  },
  exercise: {
    title: 'Exercice',
    searchTitle: 'Exercice {$1}',
    createTitle: 'Créer une exercice',
    editTitle: "Éditer l'exercice '{$1}'",
    releaseTitle: "Publier l'exercice",
    searchSubtitle: 'Recherche',
    exerciseSubtitle: 'Problème',
    categoryDescriptionSubtitle: "Instructions pour l'exercice {$1}",
    functionsSubtitle: 'Fonctions',
    testCasesSubtitle: 'Tests',
    solutionSubtitle: 'Solution',
    optionsSubtitle: 'Options',
    releaseRequestedSubtitle: 'Demande de publication',
    releasedSubtitle: 'Publication confirmée',
    editBreadcrumb: "Édition d'exercice",
    exercise: 'exercice',
    exercises: 'exercices',
    upcoming: 'bientôt...',
    nameLabel: 'Nom',
    descriptionLabel: 'Description',
    typeLabel: 'Type',
    typeToCreateLabel: "Type d'exercice à créer",
    programmingLanguageLabel: 'Langage de programmation',
    categoryLabel: 'Categorie',
    difficultyLabel: 'Difficultée',
    codeFragmentLabel: 'Code de solution',
    templateFragmentLabel: 'Gabarit de code',
    solutionFragmentLabel: 'Exemple de solution',
    solvedLabel: 'Résolu',
    answerLabel: 'Votre réponse',
    solutionPatternLabel: 'Motif pour la solution (regex)',
    solutionLabel: 'Solution',
    codeMirrorThemeLabel: 'Éditeur de thème',
    releaseRequestedAtLabel: 'Publication demandée à',
    releaseRequestNotifiedAtLabel: 'Notifié à',
    releasedByLabel: 'Publication confirmée par',
    releasedAtLabel: 'Publication confirmée à',
    multipleSolutionsLabel: 'Autoriser les réponses multiples',
    weightLabel: 'Poids',
    showSolutionLabel: 'Montrer un exemple de solution',
    showReleasedLabel: 'Montrer les exercices publiés',
    showUnreleasedLabel: 'Montrer les exercices privés',
    // blacklistLabel
    editButton: "éditer l'exercice",
    duplicateButton: 'dupliquer',
    releaseRequestButton: 'demander la publication',
    releaseButton: 'publier',
    unreleaseButton: 'cacher',
    executeTestsButton: 'exécuter les tests',
    saveAnswerButton: 'enregistrer la réponse',
    showSolutionButton: 'montrer un exemple de solution',
    closeButton: 'Fermer',
    blacklistMatchMessage: 'la validation a échoué, terme illégal : {$1}',
    releasedMessage: 'Cet exercice a été publié.',
    releaseRequestedMessage: 'La publication de cet exercice a été demandée.',
    successMessage: 'Cet exercice a été correctement résolu.',
    failureMessage: "Cet exercice n'a pas été correctement résolu.",
    unevaluatedMessage: 'Cet exercice a été évalué manuellement.',
    executionSuccessMessage: 'Tous les tests sont passés avec succès.',
    executionFailureMessage: 'Certains tests ne passent pas !',
    changedMessage: "Cet exercice a été modifié depuis que vous l'avez résolu.\nVous devriez jeter un oeil à sa dernière version.",
    isNotValidMessage: "Cet exercice n'est pas valide et ne peut pas être enregistré.\nVeuillez remplir tous les champs obligatoires (langage, catégorie, difficulté, nom(s), description(s), fonction(s), test(s)).\n"
    + "Si vous voulez publier un exercice, assurez-vous d'avoir sélectionné votre catégorie privée.\nVérifiez que toutes les valeurs entrées sont valides.",
    isNotTestedMessage: "Cet exercice ne peut pas être publié parce qu'il n'a pas été testé.",
    function: {
      nameLabel: 'Nom de la fonction',
      namePlaceholder: 'nomDeLaFonction',
      returnTypeLabel: 'Type de retour',
      returnTypePlaceholder: 'type_de_retour',
      parameterNameLabel: 'Nom du paramètre',
      parameterNamePlaceholder: 'parameter_name',
      parameterTypeLabel: 'Type du paramètre',
      parameterTypePlaceholder: 'parameter_type',
    },
    testCase: {
      // success
      others: 'autres tests',
      descriptionLabel: 'Test',
      functionLabel: 'Fonction',
      inputLabel: 'Arguments',
      expectedOutputLabel: 'Retour attendu',
      visibleLabel: 'Visible',
      resultLabel: 'Résultat / Erreur retournée',
      successMessage: 'Ce test a été exécuté avec succès.',
      failureMessage: 'Le test a échoué.',
    },
    option: {
      descriptionLabel: 'Description',
      correctLabel: 'Juste',
      wrongLabel: 'Faux',
    },
    help: {
      title: 'Instructions',
      showButton: 'montrer les instructions',
      types: 'Pour les types, veuillez entrer une des valeurs suivantes. Les types de paramètre peuvent eux-mêmes être remplacés par un type.',
      values: "Pour les valeurs, veuillez entrer un format valide d'après les instructions et exemples. Pour les textes et les nombres, entrez simplement la valeur sans guillemets. "
      + "Pour les collections, entrez les valeurs séparées par des virgules. Pour les tableaux associatifs, séparez une clé de sa valeur par deux points (':'), et les couples par une virgule.",
      blacklist: 'Les termes suivants ne peuvent apparaitre dans les fragments de code.',
      testCaseVisibleMessage: 'Ce test sera-t-il accessible aux étudiants ?',
      solutionVisibleMessage: "L'exemple de solution sera-t-il accessible aux étudiants ?",
      versionInformationMessage: 'Version du langage : {$1}, Compilateur : {$2} v{$3}, Plateforme de compilation : {$4} v{$5} ({$6})',
    },
    type: {
      1: 'Programmation',
      2: 'Choix multiple',
      3: 'Texte libre',
    },
    difficulty: {
      1: 'Débutant',
      2: 'Intermediaire',
      3: 'Avancé',
      4: 'Expert',
    },
  },
  examination: {
    createTemplateTitle: 'Créer un examen',
    createExecutionTitle: 'Créer une exécution',
    editTemplateTitle: "Éditer l'examen '{$1}'",
    editExecutionTitle: "Éditeur l'exécution '{$1}'",
    configureExaminationSubtitle: "Configurer l'examen",
    configureExecutionSubtitle: "Configurer l'exécution",
    overviewTitle: "Vue d'ensemble de l'examen '{$1}'",
    selectExercisesSubtitle: 'Sélectionner les exercices de cet examen',
    exercisesSubtitle: "Exercices de l'examen",
    examineesSubtitle: 'Candidats',
    templateType: 'Examen',
    executionType: 'Exécution',
    startTimeLabel: 'Heure de début',
    endTimeLabel: 'Heure de fin',
    durationLabel: 'Durée',
    durationUnitLabel: 'min',
    examineesLabel: 'Candidats',
    examineeViewLabel: 'Lien à distribuer aux candidats',
    progressLabel: 'Avancement',
    totalWeightLabel: 'Poids total',
    numberOfExamineesLabel: 'Nombre de candidats',
    numberOfExercisesLabel: "Nombre d'exercices",
    logEvaluationsLabel: 'Évaluations',
    logActivityLabel: 'Actions',
    logDifferenceLabel: 'Caractères',
    createExecutionButton: 'créer une exécution',
    startExecutionButton: "lancer l'exécution",
    overviewButton: "vue d'ensemble de l'examen",
    extendDurationButton: 'prolonger la durée',
    addExerciseButton: "ajouter un exercice à l'examen",
    addExamineeButton: 'ajouter un candidat',
    exportPDFEmptyButton: 'export PDF (vide)',
    exportPDFSolvedButton: 'export PDF (avec réponses)',
    exportCSVButton: 'export résultats en CSV',
    cannotEditMessage: 'Vous ne pouvez éditer une exécution qui a débutée.',
    templateIsNotValidMessage: "Cet examen n'est pas valide et ne peut être enregistrée.\nVeuillez remplir tous les champs obligatoires (nom(s), durée, exercices avec poids).",
    executionIsNotValidMessage: "Cette exécution n'est pas valide et ne peut être enregistrée.\nFill in all the mandatory fields (nom(s), description(s), durée, exercices avec poids).",
    help: {
      progressTitle: 'Explication de progression',
      logOverviewTitle: 'Explication des logs',
      examinees: "Si aucun candidat n'est choisi, cet examen sera public. Tout le monde pourra le passer.",
      progress: "Rouge: pas répondu\nJaune: Partiellement résolu\nVert: Résolu avec succès\nBleu: Répondu (pas d'évaluation automatique ou visible)",
      logOverview: "Évaluations: Nom d'évaluations (enregistrer / compiler) ces {$1} dernière(s) minute(s)\nActions: Nombre moyen d'actions (frappes au clavier / cliques de souris) par seconde\n"
      + "Caractères: Nombre moyen de caractères frappés par seconde (nombre négatif : plus de caractères supprimés qu'ajoutés)\nCroix rouge: Pas d'activité depuis plus de {$2} minute(s)",
    },
  },
  form: {
    // notAvailable
    selectAll: 'tous',
    selectPleaseChoose: 'choisissez une option',
    textFilter: 'filtre de texte',
    minLength: 'Vous devez entrer au moins {$1} caractère(s).',
    supportsMarkdown: 'Ce champ supporte le Markdown',
    createdBy: 'crée par',
    editedBy: 'dernière édition par',
    actionAt: 'à',
    createdByLabel: 'Créé par',
    editedByLabel: 'Dernière édition par',
    editedAtLabel: 'Dernière édition à',
    searchButton: 'recherche',
    saveButton: 'enregistrer',
    cancelButton: 'annuler',
    deleteButton: 'supprimer',
    addButton: 'ajouter un élément',
    moveUpButton: "Déplacer l'exercice vers le haut",
    moveDownButton: "Déplacer l'exercice vers le bas",
    removeButton: 'supprimer cet élément',
    togglePanelButton: 'afficher/cacher le panneau',
    previousButton: 'précédent',
    nextButton: 'suivant',
    cannotSaveMessage: "Vous n'êtes pas autorisé à enregistrer ce document.",
    documentChangedMessage: 'Le document actuellement ouvert a été modifié.\nSi vous continuez, vous écraserez ces modifications. Peut-être devriez-vous recharger la page ?',
    noFilterMessage: 'Vous devez indiquer au moins un critère de recherche.',
    noResultsMessage: 'Aucun résultat trouvé.',
    noSelectionMessage: 'Aucun élément sélectionné.',
    saveSuccessfulMessage: 'Saisie enregistrée avec succès.',
  },
  email: {
    greeting: 'Meilleures salutations,',
    footer: 'Progressor - The Programming Professor\nBern University of Applied Sciences - Department of Engineering and Information Technology\nQuellgasse 21 - CH-2501 Biel/Bienne - Switzerland',
    releaseNotifier: {
      subject: 'Progressor - Nouvelle demande de publication',
      title: "Notification de demande de publication d'exercice",
      intro: "Bonjour {$1},\nVous avez reçu de nouvelles {$2}demandes d'exercices à publier.{$3}\nVeuillez traiter les demandes en attente.",
    },
    verifyEmail: {
      subject: "Progressor - Vérification d'adresse email",
      title: "Vérification d'adresse email",
      intro: 'Bonjour {$1},\nBienvenue sur {$2}Progressor - The Programming Professor.{$3}\nPour vérifier votre adresse email, veuillez cliquer sur le lien ci-dessous.',
      info: 'Dans les paramètres de votre compte, vous pouvez entrer votre {$1}nom{$2}.\nPour commencer à utiliser Progressor, vous pouvez simplement résoudre un exercice existant.\nVous pouvez aussi créer vos propres exercices privés et les partager avec vos amis.',
      motivation: 'Amusez-vous bien en apprenant à programmer ! :)',
    },
    resetPassword: {
      subject: 'Progressor - Réinitialisation de mot de passe',
      title: 'Réinitialiser le mot de passe',
      intro: 'Bonjour {$1},\nPour réinitialiser votre mot de passe, veuillez cliquer sur le lien ci-dessous pour choisir un nouveau mot de passe.',
    },
  },
  programmingLanguages: {
    java: {
      // name
      description: 'est un langage généraliste concurrent, orienté objet basé sur les classes.',
    },
    cpp: {
      // name
      description: '(prononcé cé plusse plusse) est un langage généraliste impératif, orienté objet basé sur les classes, permettant un style impératif et permettant la programmation générique.',
    },
    csharp: {
      // name
      description: '(prononcé cé sharp) est un langage multi-paradigme fortement typé permettant la programmation imperative, déclarative, fonctionnelle, générique, orientée objet basé sur les classes, et la programmation orientée composant.',
    },
    python: {
      // name
      description: "est un langage généraliste de haut niveau très commun. Sa philosophie met l'emphase sur la lisibilité et compréhensibilité du code, et sa syntaxe permet aux développeurs d'exprimer les concepts et moins de lignes de code que des langages tels que Java ou C++.",
    },
    javascript: {
      // name
      description: "est un langage dynamique de haut niveau. Avec HTML et CSS, il est l'un des composant principaux du Web.",
    },
    php: {
      // name
      description: "est un langage de script côté serveur pour le développement d'applications web.",
    },
    kotlin: {
      // name
      description: "(dont le nom provient d'une île proche de St. Petersburg) est un langage statiquemenet typé qui est interprété par la machine virtuelle Java, mais peut également être compilé vers JavaScript. Kotlin est prévu pour être intéropérable avec le code Java.",
    },
    vbnet: {
      // name
      description: 'est un langage multi-paradigme de haut niveau, implémenté au sein du framework .NET. Microsoft a lancé VN.NET en 2002 comme successeur à son langage original Visual Basic.',
    },
    upcoming: {
      name: 'Plus',
      description: 'de langages de programmation ou de requêtes peuvent être ajoutés. Nous avons besoin de votre aide pour ceci !',
    },
  },
  error: {
    403: {
      // name
      message: "Vous n'êtes pas autorisé à accéder à cette page.",
    },
    404: {
      // name
      message: "Cette page n'a pu être trouvée.",
    },
    notAuthenticated: {
      message: 'Vous devez être connecté pour effectuer cette action.',
    },
    notAdmin: {
      message: 'Vous devez être administrateur pour effectuer cette action.',
    },
    notAuthor: {
      message: "Vous devez être l'auteur de cet élément pour effectuer cette action.",
    },
    locked: {
      message: 'Ce document est verrouillé.',
    },
  },
});

moment.defineLocale('fr', {
  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
  monthsParseExact: true,
  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
  weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
  weekdaysParseExact: true,
  longDateFormat: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'DD/MM/YYYY',
    LL: 'D MMMM YYYY',
    LLL: 'D MMMM YYYY HH:mm',
    LLLL: 'dddd D MMMM YYYY HH:mm',
  },
  calendar: {
    sameDay: '[Aujourd\'hui à] LT',
    nextDay: '[Demain à] LT',
    nextWeek: 'dddd [à] LT',
    lastDay: '[Hier à] LT',
    lastWeek: 'dddd [dernier à] LT',
    sameElse: 'L',
  },
  relativeTime: {
    future: 'dans %s',
    past: 'il y a %s',
    s: 'quelques secondes',
    m: 'une minute',
    mm: '%d minutes',
    h: 'une heure',
    hh: '%d heures',
    d: 'un jour',
    dd: '%d jours',
    M: 'un mois',
    MM: '%d mois',
    y: 'un an',
    yy: '%d ans',
  },
  ordinalParse: /\d{1,2}(er|)/,
  ordinal(number) {
    return number + (number === 1 ? 'er' : '');
  },
  week: {
    dow: 1, // Monday is the first day of the week.
    doy: 4, // The week that contains Jan 4th is the first week of the year.
  },
});
